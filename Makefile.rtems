#
#  $Id$
#
# Templates/Makefile.leaf
# 	Template leaf node Makefile
#

# C source names, if any, go here -- minus the .c
C_PIECES_netboot=netboot ctrlx term 
C_PIECES_coredump=coredump ctrlx term 
C_PIECES_libnetboot=fixup_net_config pairxtract

C_PIECES=$(C_PIECES_$(PGM)) $(C_PIECES_$(LIB))
C_O_FILES=${C_PIECES:%=${ARCH}/%.o}
C_FILES=$(C_PIECES:%=%.c)

# link from the subdir
# C++ source names, if any, go here -- minus the .cc

CC_PIECES=$(CC_PIECES_$(PGM)) $(CC_PIECES_$(LIB))
CC_FILES=$(CC_PIECES:%=%.cc)
CC_O_FILES=$(CC_PIECES:%=${ARCH}/%.o)

H_FILES=

# Assembly source names, if any, go here -- minus the .S
S_PIECES_coredump=boot

S_PIECES=$(S_PIECES_$(PGM)) $(S_PIECES_$(LIB))
S_FILES=$(S_PIECES:%=%.S)
S_O_FILES=$(S_FILES:%.S=${ARCH}/%.o)

SRCS=$(C_FILES) $(CC_FILES) $(H_FILES) $(S_FILES)
OBJS=$(C_O_FILES) $(CC_O_FILES) $(S_O_FILES)


APPS=netboot
## T.S, 2006/08/11 Memory footprint on RTEMS-4.7 too big :-(
## disable 'coredump' for now
##ifeq ($(RTEMS_BSP),svgm)
###No point in making coredump for MotLoad BSPs; MotLoad clears all memory when booting
##APPS+=coredump
##endif

LIBRS=libnetboot

# List of RTEMS managers to be included in the application goes here.
# Use:
#     MANAGERS=all
# to include all RTEMS managers in the application.
# Weird: using 'all' results in smaller image than a selected list...
MANAGERS=all

include $(RTEMS_MAKEFILE_PATH)/Makefile.inc

include $(RTEMS_CUSTOM)
#include $(RTEMS_ROOT)/make/leaf.cfg
include $(RTEMS_ROOT)/make/lib.cfg

#
# (OPTIONAL) Add local stuff here using +=
#
DEFINES_coredump += -DCOREDUMP_APP

DEFINES += -DWINS_LINE_DISC ${DEFINES_${PGM}} ${DEFINES_${LIB}}
# -DUSE_SHELL
CPPFLAGS += -I. -I$(exec_prefix)/include
CFLAGS += $(DEBUG)

ifeq ($(RTEMS_BSP),uC5282)
DEFINES+=-DNVRAM_READONLY -DNVRAM_UCDIMM '-DBSP_mem_size=(1024*1024*8)'
C_PIECES += uC5282_mover
endif

ifneq "$(filter $(RTEMS_BSP),beatnik svgm)xx" "xx"
DEFINES+=-DBSP_HAS_COMMANDLINEBUF
endif

#
# CFLAGS_DEBUG_V are used when the `make debug' target is built.
# To link your application with the non-optimized RTEMS routines,
# uncomment the following line:
# CFLAGS_DEBUG_V += -qrtems_debug
#

LD_PATHS  += $(exec_prefix)/lib
#LD_LIBS   += -lcexp -lelf -lreadline -ltermcap -lregexp
LD_LIBS   += -ltecla_r -lrtemsNfs
#LD_LIBS   += -lreadline -ltermcap
#LDFLAGS   += -L/usr/local/rtems/powerpc-rtems/lib -Wl,-Map,map
#LDFLAGS += -Wl,--section-start,.image_start=0x300000 -Wl,--section-start,.data=0x500000
#LDFLAGS += -Wl,--section-start,.text=0x3000 -Wl,--section-start,.data=0x100000
LDFLAGS_coredump = -qnolinkcmds -Wl,-Tcoredump.lds
LDFLAGS += -Wl,-Map,$(ARCH)/${PGM}.linkmap ${LDFLAGS_${PGM}} -Wl,-u,inet_pton -Wl,-z,muldefs

#
# Add your list of files to delete here.  The config files
#  already know how to delete some stuff, so you may want
#  to just run 'make clean' first to see what gets missed.
#  'make clobber' already includes 'make clean'
#

CLEAN_ADDITIONS += term.c
CLOBBER_ADDITIONS +=

all:	${ARCH} $(SRCS) $(APPS) $(LIBRS)
	@echo all: $^

.PHONY: $(APPS) $(LIBS)


define mp-debug
	echo MAKING $(PGM)
	echo OBJS $(OBJS)
	echo PREQS $^
endef

define ml-debug
	echo MAKING $(LIB)
	echo OBJS $(OBJS)
	echo PREQS $^
endef



$(APPS):%:$(ARCH)/%.exe

$(LIBRS):%:$(ARCH)/%.a

# each APP needs to set PGM because target dependent variable settings
# are **not** expanded in the prerequisites :-( :-(
# AND the target specific variable definition is necessary to override
# the value used by the commands :-(. Ugly
netboot:PGM=netboot
netboot:LIB=
PGM:=netboot
LIB:=
$(ARCH)/$(PGM).exe: $(OBJS) $(LINKFILES)
	$(make-exe)

coredump:PGM=coredump
coredump:LIB=
PGM:=coredump
LIB:=
$(ARCH)/$(PGM).exe: $(OBJS) $(LINKFILES)
	$(make-exe)

libnetboot:LIB=libnetboot
libnetboot:PGM=
LIB:=libnetboot
PGM:=
$(ARCH)/$(LIB).a: $(OBJS)
	$(make-library)

$(ARCH)/netboot.o: nvram.c pathcheck.c
$(ARCH)/coredump.o: nvram.c pathcheck.c
$(ARCH)/fixup_net_config.o: nvram.c

term.c: termsize/term.c
	ln -s $^ $@

coredump.c: netboot.c
	ln -s $^ $@

# Install the program(s), appending _g or _p as appropriate.
# for include files, just use $(INSTALL_CHANGE)
#install:  all
#	$(INSTALL_VARIANT) -m 555 ${PGMS} ${PROJECT_RELEASE}/bin
