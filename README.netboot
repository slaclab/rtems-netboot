$Id$

Till Straumann <strauman@slac.stanford.edu>, 3/2002..4/2007.

Using the 'netboot' remote boot loader
--------------------------------------

The 'netboot' remote boot loader is itself an RTEMS
application intended to download other RTEMS applications
(similar to a vxworks 'bootrom' but with more features).


RATIONALE: 
  - Many firmwares doesn't support BOOTP/DHCP or NFS;
    hence all boards would need manual boot parameter
    configuration stored into NVRAM/flash.
  - Using 'netboot' on a variety of boards frees users
    from learning how to interact with different firmware.
	The user always finds a 'standard' environment
	for booting.

The 'netboot' loader is a RTEMS application which can be
stored into flash memory.

When started, the loader tries to get the 
  - target IP address	(mandatory)
  - IP subnet mask  (mandatory)
  - server address
  - gateway address
  - target hostname
  - log server address
  - boot file name
either using the BOOTP protocol or from NVRAM (which option
to use by default is also NVRAM configurable).

It then tries to download the 'boot file' from the
'server' using either the 'nfs', 'rsh' or the 'tftp' protocol.

Common Parameters
- - - - - - - - -
This section describes a set of parameters/conventions
common to all boot methods:

  path: relative path to the boot file on the server.
        The path may end in a directory or be empty
        altogether.  In this case, the default filename
        'rtems.exe' is appended to the path.

  hostspec: defines the boot file server. May either
        be a DNS name (provided that the boot parameters
        specify a DNS server) or an IP address in standard
        'dot-notation'.
        The hostspec may be missing thus instructing
        the bootloader to use the default server. The
        default server is either the BOOTP ('next' or
		proper) server ('d' key or BOOTP-enable flag set
		to 'P' or 'Y' and a key other than 'm' is pressed)
		or the server stored in NVRAM
        ('m' key or BOOTP-enable flag set to 'N'
         and a key other than 'd' is pressed)

RSH download
- - - - - - -
A file name conforming to the syntax 

  rsh-path = [ hostspec, ':' ], '~', user, [ '/', path ];

instructs loader to issue a 

	rsh hostspec -l user cat path

command for downloading the image. <user> and <path>
are extracted from the BOOTP 'filename' answer.
I.e., <path> is relative to <user>'s home directory.

Examples:
  server:~rtems/rtems-4.6.0/bin/rtems.exe
  ~rtems	(* uses file 'rtems.exe' in user 'rtems' home dir *)

NFS download
- - - - - - -
A valid NFS path specifier must conform to the syntax

  nfs-path    = [ server ], ':',  remote-path, ':' [ [ '/' ],  path ];
  server      = [ uid, '.', gid, '@' ], [ hostspec ];
  uid         = digit, { digit };
  gid         = digit, { digit };
  hostspec    = dns-name |  dot-notation-ip-address;
  remote-path = '/', exported-path-to-mount;
  path        = file-relative-to-mountpoint;

Optionally, the user and group IDs to be used for
authentication on the NFS server can be provided
(defaults to 0.0).

Examples:
  :/export/rtems:4.6.0/bin/rtems.exe
  1024.1024@192.168.2.12:/export/rtems:4.6.0/bin
  1111@1111:/export/rtems:4.6.0/bin/rtems-test.exe
  :/export/rtems:

TFTP download
- - - - - - -
The syntax for a TFTP path specifier is

  tftp-path = [ '/TFTP/', serverid ], path;
  serverid  = dot-notation-ip-address | 'BOOTP_HOST';

If the '/TFTP/', serverid prefix is missing, the
default prefix "/TFTP/BOOTP_HOST" will be used.
'BOOTP_HOST' is substituted by the default server
(see 'hostspec' definition above). Note that a
DNS name can *not* be used.

Note that simple relative <path> lacking any
'~' or ':' characters only matches the <tftp-path>
rule. The loader attempts to use TFTP in such cases.

Manual ServerIP / Filename configuration
- - - - - - - - - - - - - - - - - - - - -
If no filename / server are supplied or if the
download fails, the respective parameters may
be entered manually at the console. They are
interpreted exactly the same way as described
above.

Manual Configuration
- - - - - - - - - - -
The loader also supports using manually configured
IP addresses etc. which it stores in NVRAM. A programmable
flag (also a NVRAM configuration setting) determines whether
to use the manual/NVRAM configuration or to obtain
a configuration via BOOTP. The "Use BOOTP" flag supports
three settings: 'N', 'Y' and 'P':
 'N': do not use BOOTP; obtain all settings from NVRAM.
 'Y': do not use NVRAM for settings other than the 'Use BOOTP flag'
      and the 'Autoboot delay' but use BOOTP.
 'P': do BOOTP to get all networking parameters but use
      the 'filename' and 'commandline' stored in NVRAM. This
      is handy on development platforms.

The NVRAM setting of the 'Use BOOTP' flag can be overridden
at run-time by hitting the 'm', 'd', and 'p' keys which
enforce the behavior described under 'N', 'Y' and 'P',
respectively. (In some cases, booting may be refused because
of missing NVRAM parameters. It is not possible, for example
to override 'Y' with the 'm' key if there are IP configuration
parameters missing in NVRAM.)

NOTE: The loader maintains its own IP configuration in NVRAM
(manual option) which is independent from firmware variables.

Consult the README.<bsp> for instructions for programming
'netboot' into flash and for starting it up. Also, the
BSP-specific README files may explain BSP-specific features
of 'netboot'.
